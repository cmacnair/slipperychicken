;; Hello Chick Slippers! 
;; Here are the functions I developed for my final Non-Real Time composition
;; Please feel free to post yours

;;tempo algos

(defun accel (startmm endmm starttempo endtempo rate) 
  (loop for i from startmm to endmm by rate
	for j from starttempo to endtempo 
	by ( / ( - endtempo starttempo) ( / ( - endmm startmm) rate)) 
	collect (list i (list `q j))))

(defun deccel (startmm endmm starttempo endtempo rate) 
  (loop for i from startmm to endmm by rate
	for j from starttempo downto endtempo 
	by ( / ( - starttempo endtempo) ( / ( - endmm startmm) rate)) 
	collect (list i (list `q j))))

;;set algos

(defun split-scale (splitfactor starting-degree starting-octave end-octave)
  (loop for data in
	(loop for i from (+ (* 24 (+ 1 starting-octave)) starting-degree) 
	      to (* 24 (+ 1 end-octave)) 
	      by splitfactor collect (list i))
	collect
	(degree-to-note (first data) 'quarter-tone)))

;;limit algos
;; c-1 = 0 : c0 = 24 : c1 = 48 : c2 = 72 : c3 = 96 
;; c4 = 120 : c5 = 144 : c6 = 168 : c7 = 192 : c8 = 216
;; c9 = 240 : C10 264

(defun limit-up (startmm endmm startlimit endlimit rate)
  (loop for i from startmm to endmm by rate
	for j from startlimit to endlimit 
	      by ( / ( - endlimit startlimit) ( / ( - endmm startmm) rate))
	      collect i collect (degree-to-note j 'quarter-tone)))

(defun limit-down (startmm endmm startlimit endlimit rate)
  (loop for i from startmm to endmm by rate
	for j from startlimit downto endlimit 
	      by ( / ( - startlimit endlimit) ( / ( - endmm startmm) rate))
	      collect i collect (degree-to-note j 'quarter-tone)))

;;;;;;;;;;Rhythm-pallete algos
;;RPMA = rhythm-pallete-melodic-ascending
;;Examp.  (RPMA 1 10 0 '((q) q q (q) q (e) e (q) q) '(8 4) 5 1 10 2 2)

(defun RPMA (startnum endnum skip 
		      rhythm time-signature numnonrests 
		      pitchcurve-start pitchcurve-end rate
		      accents-wanted)
  (loop for i from startnum to endnum for data in 
	(inefficiently-permutate rhythm :max (- endnum startnum) 
				 :skip skip :fix t :sublists t) 
	collect 
	(list i 
	      (list (list (append (list time-signature) data)) 
	      ':pitch-seq-palette (loop for i from pitchcurve-start 
					to pitchcurve-end by rate 
					collect i) 
	      ':marks (loop repeat accents-wanted collect 'a collect 
			    ( + 1 (random numnonrests)))))))

;;RPMD = rhythm-pallete-melodic-decending
;;Examp.  (RPMD 1 10 0 '((q) q q (q) q (e) e (q) q) '(8 4) 5 10 1 2 2)

(defun RPMD (startnum endnum skip rhythm time-signature numnonrests 
		      pitchcurve-start pitchcurve-end rate
		      accents-wanted)
  (loop for i from startnum to endnum for data in 
	(inefficiently-permutate rhythm :max (- endnum startnum) 
				 :skip skip :fix t :sublists t) 
	collect 
	(list i 
	      (list (list (append (list time-signature) data)) 
	      ':pitch-seq-palette (loop for i from pitchcurve-start 
					downto pitchcurve-end by rate 
					collect i) 
	      ':marks (loop repeat accents-wanted collect 'a collect 
			    ( + 1 (random numnonrests)))))))


;;RPMJ = rhythm-pallete-melodic-jagged
;;examp (RPMJ 1 10 0 '((q) q q (q) q (e) e (q) q) '(8 4) 5 30 40 2)

(defun RPMJ (startnum endnum skip rhythm time-signature numnonrests 
		      center jaggedness
		      accents-wanted)
  (loop for i from startnum to endnum for data in 
	(inefficiently-permutate rhythm :max (- endnum startnum) 
				 :skip skip :fix t :sublists t) 
	collect 
	(list i 
	      (list (list (append (list time-signature) data)) 
	      ':pitch-seq-palette (loop repeat numnonrests collect 
					( + 1 center (random jaggedness))) 
	      ':marks (loop repeat accents-wanted collect 'a collect 
			    ( + 1 (random numnonrests)))))))

;;RPR = rhythm-pallete-rhythmic
;; examp (RPR 1 10 0 '((q) q q (q) q (e) e (q) q) '(8 4) 5 2)

(defun RPR (startnum endnum skip rhythm time-signature numnonrests 
		     accents-wanted)
  (loop for i from startnum to endnum for data in 
	(inefficiently-permutate rhythm :max (- endnum startnum) 
				 :skip skip :fix t :sublists t) 
	collect 
	(list i 
	      (list (list (append (list time-signature) data)) 
	      ':pitch-seq-palette `,(loop repeat numnonrests collect '1) 
	      ':marks (loop repeat accents-wanted collect 'a collect 
			    ( + 1 (random numnonrests)))))))
