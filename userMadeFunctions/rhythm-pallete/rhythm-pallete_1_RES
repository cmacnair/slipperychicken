;; rhythm-pallete_RES

;;RPMA = rhythm-pallete-melodic-ascending
;;Examp.  (RPMA 1 10 0 '((q) q q (q) q (e) e (q) q) '(8 4) 5 1 10 2 2)

(defun RPMA (startnum endnum skip 
		      rhythm time-signature numnonrests 
		      pitchcurve-start pitchcurve-end rate
		      accents-wanted)
  (loop for i from startnum to endnum for data in 
	(inefficiently-permutate rhythm :max (- endnum startnum) 
				 :skip skip :fix t :sublists t) 
	collect 
	(list i 
	      (list (list (append (list time-signature) data)) 
	      ':pitch-seq-palette (loop for i from pitchcurve-start 
					to pitchcurve-end by rate 
					collect i) 
	      ':marks (loop repeat accents-wanted collect 'a collect 
			    ( + 1 (random numnonrests)))))))

;;RPMD = rhythm-pallete-melodic-decending
;;Examp.  (RPMD 1 10 0 '((q) q q (q) q (e) e (q) q) '(8 4) 5 10 1 2 2)

(defun RPMD (startnum endnum skip rhythm time-signature numnonrests 
		      pitchcurve-start pitchcurve-end rate
		      accents-wanted)
  (loop for i from startnum to endnum for data in 
	(inefficiently-permutate rhythm :max (- endnum startnum) 
				 :skip skip :fix t :sublists t) 
	collect 
	(list i 
	      (list (list (append (list time-signature) data)) 
	      ':pitch-seq-palette (loop for i from pitchcurve-start 
					downto pitchcurve-end by rate 
					collect i) 
	      ':marks (loop repeat accents-wanted collect 'a collect 
			    ( + 1 (random numnonrests)))))))


;;RPMJ = rhythm-pallete-melodic-jagged
;;examp (RPMJ 1 10 0 '((q) q q (q) q (e) e (q) q) '(8 4) 5 30 40 2)

(defun RPMJ (startnum endnum skip rhythm time-signature numnonrests 
		      center jaggedness
		      accents-wanted)
  (loop for i from startnum to endnum for data in 
	(inefficiently-permutate rhythm :max (- endnum startnum) 
				 :skip skip :fix t :sublists t) 
	collect 
	(list i 
	      (list (list (append (list time-signature) data)) 
	      ':pitch-seq-palette (loop repeat numnonrests collect 
					( + 1 center (random jaggedness))) 
	      ':marks (loop repeat accents-wanted collect 'a collect 
			    ( + 1 (random numnonrests)))))))

;;RPR = rhythm-pallete-rhythmic
;; examp (RPR 1 10 0 '((q) q q (q) q (e) e (q) q) '(8 4) 5 2)

(defun RPR (startnum endnum skip rhythm time-signature numnonrests 
		     accents-wanted)
  (loop for i from startnum to endnum for data in 
	(inefficiently-permutate rhythm :max (- endnum startnum) 
				 :skip skip :fix t :sublists t) 
	collect 
	(list i 
	      (list (list (append (list time-signature) data)) 
	      ':pitch-seq-palette `,(loop repeat numnonrests collect '1) 
	      ':marks (loop repeat accents-wanted collect 'a collect 
			    ( + 1 (random numnonrests)))))))
